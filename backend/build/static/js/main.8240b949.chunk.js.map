{"version":3,"sources":["api/ChatSocket.js","Components/Chat/Message/index.js","Components/Chat/Message/Message.jsx","Components/Chat/ChatHistory/index.js","Components/Chat/ChatHistory/ChatHistory.jsx","Components/Chat/ChatInput/index.js","Components/Chat/ChatInput/ChatInput.jsx","Components/Chat/Users/index.js","Components/Chat/Users/UserList.jsx","authorization/auth.js","Components/Head/Header/Header.jsx","Components/Head/Header/index.js","Components/Chat/ServerList/index.js","Components/Chat/ServerList/ServerList.jsx","Components/Chat/ChatPage/index.js","Components/Chat/ChatPage/ChatPage.jsx","Components/Log/Login/index.js","Components/Log/Login/LoginPage.jsx","authorization/protected.route.js","App.js","serviceWorker.js","index.js"],"names":["ChatSocket","userName","userColour","users","user","username","this","userID","rooms","room","name","ID","messages","cs","WebSocket","cb","console","log","onopen","onmessage","msg","onclose","event","onerror","error","i","roomid","length","id","splice","send","JSON","stringify","action","message","close","roomName","Message","props","temp","state","timeStamp","displayTime","className","style","color","localeTime","Date","toLocaleString","forceUpdate","substr","Component","ChatHistory","scrollToBottom","chatHistory","el","scrollIntoView","behvaior","map","index","ref","ChatInput","chatInput","onKeyDown","placeholder","UserList","userList","onClick","privateMessage","sessionStorageUser","colour","charAt","replace","sessionStorage","setItem","_name","_colour","removeItem","getItem","parse","Header","auth","logout","history","push","currentRoom","handleLogout","withRouter","ServerList","value","changeRoom","split","item","join","toUpperCase","ChatPage","handleChange","e","setState","target","handleShow","isActive","handleHide","roomID","_chatSocket","joinPrivateRoom","isAuthenticated","getUserName","getUserColour","connect","handleSocketEvent","type","handleNewMessage","data","handleChatMessage","handleUserJoined","handleUserLeft","handleRoomJoined","handleUserJoinedRoom","updateState","sort","a","b","timestamp","closeSocket","keyCode","sendMessage","joinRoom","roomInput","findRoom","Object","values","to","LoginPage","submitLogin","login","verifyInput","keyPressed","key","continue","onKeyPress","onChange","htmlFor","ProtectedRoute","component","rest","render","pathname","from","location","App","exact","path","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.8240b949.chunk.js","sourcesContent":["class ChatSocket{\r\n  _socketEndpoint;\r\n  _socket;\r\n  users = [];\r\n  user= {\r\n    username: this.userName,\r\n    userID:\"\"\r\n  };\r\n  // roomInput;\r\n  rooms = {};\r\n  room = {\r\n    name:\"\",\r\n    ID: \"\",\r\n    messages:[],\r\n    users:[]\r\n  };\r\n  cs;\r\n\r\n  constructor( userName, userColour){\r\n    // this._socketEndpoint = `${socketEndpoint}?user=${userName}&userColour=${userColour}&userId=${userId}`;\r\n    // this._socket = connect ? new WebSocket(this._socketEndpoint):null;\r\n    this.cs = new WebSocket(`ws://localhost:8080/ws?user=${userName}&userColour=${userColour}`)\r\n    // this.cs.addEventListener('open', (event) => {this.createSocket(event)});\r\n    // this.cs.addEventListener('message', (event) => {this.handleNewMessage(event)});\r\n\r\n  }\r\n  connect(cb) {\r\n    console.log(\"Attempting Connection...\");\r\n  \r\n    this.cs.onopen = () => {\r\n      console.log(\"Successfully Connected\");\r\n    };\r\n  \r\n    this.cs.onmessage = (msg) => {\r\n      cb(msg)\r\n    };\r\n  \r\n    this.cs.onclose = (event) => {\r\n      console.log(\"Socket Closed Connection: \", event);\r\n      cb(event)\r\n    };\r\n  \r\n    this.cs.onerror = (error) => {\r\n      console.log(\"Socket Error: \", error);\r\n    };\r\n  };\r\n\r\n  handleUserLeft(msg){\r\n    for (let i =0; i< this.rooms[msg.roomid].users.length;i++){\r\n      if (this.rooms[msg.roomid].users[i].id === msg.id){\r\n        this.rooms[msg.roomid].users.splice(i,1);\r\n      }\r\n    }\r\n    // delete this.rooms[msg.roomID].users\r\n\r\n  };\r\n\r\n  sendMessage(room, msg){\r\n    if (msg !== \"\"){\r\n      this.cs.send(JSON.stringify({\r\n        action:\"send-message\",\r\n        message:msg,\r\n        roomid:room.ID,\r\n        room:room.name\r\n      }));\r\n      // console.log(msg, room);\r\n      \r\n    }\r\n  }\r\n\r\n  createSocket(){\r\n    console.log(\"WS open!\");\r\n  }\r\n\r\n  closeSocket(){\r\n    if (this.cs != null){\r\n      this.cs.close();\r\n      this.cs=null;\r\n    }\r\n  }\r\n\r\n  joinRoom(roomName){\r\n    this.cs.send(JSON.stringify({action:'join-room', message:roomName}))\r\n    // this.room.name = roomName;\r\n    // this.roomInput=\"\";\r\n  };\r\n  leaveRoom(room){\r\n    this.cs.send(JSON.stringify({action:'leave-room', message:room}))\r\n    for (let i=0;i<this.rooms.length;i++){\r\n      if(this.rooms[i].ID === room){\r\n        this.rooms.splice(i,1);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n  joinPrivateRoom(room){\r\n    this.cs.send(JSON.stringify({action:'join-room-private', message:room}))\r\n  };\r\n}\r\nexport default ChatSocket;","import Message from \"./Message.jsx\";\r\n\r\nexport default Message;","import React, { Component } from \"react\";\r\nimport \"./Message.scss\";\r\n\r\nclass Message extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let temp = this.props.message;\r\n    this.state = {\r\n      message: temp,\r\n      timeStamp: this.displayTime(temp.timeStamp)\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"Message\">\r\n      <span className =\"timeStamp\" >\r\n            {this.state.timeStamp}</span>\r\n      <span className=\"userName\" style={{color:\"#\"+this.state.message.color}}>\r\n            {this.state.message.user}&nbsp;\r\n            </span>\r\n      <span className=\"messageBody\" >{\r\n            this.state.message.msg}\r\n            </span>\r\n      </div>;\r\n  }\r\n\r\n\r\n  displayTime(timeStamp) {\r\n    var localeTime = new Date(timeStamp).toLocaleString();\r\n    this.forceUpdate();\r\n    return `${localeTime.substr(11, 5)}\\u00A0${localeTime.substr(localeTime.length - 2, localeTime.length)}`;\r\n  }\r\n}\r\n\r\nexport default Message;","import ChatHistory from \"./ChatHistory.jsx\";\r\n\r\nexport default ChatHistory;","import React, { Component } from \"react\";\r\nimport Message from \"../Message\";\r\nimport \"./ChatHistory.scss\";\r\n\r\nclass ChatHistory extends Component {\r\n\r\n  componentDidMount(){\r\n    this.scrollToBottom();\r\n    console.log(this.props.chatHistory)\r\n    this.forceUpdate();\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    this.scrollToBottom();\r\n  }\r\n  scrollToBottom(){\r\n    this.el.scrollIntoView({behvaior:'smooth'});\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.props.chatHistory);\r\n    const messages = this.props.chatHistory && this.props.chatHistory.map( (msg,index) => <Message key={index} message={msg} />);\r\n\r\n    // console.log(\"chat history\");\r\n    // console.log(messages);\r\n    return (\r\n      <div className=\"ChatHistory\">\r\n        <div id=\"chatHistory\" className=\"disable-scrollbars\">\r\n          <div id=\"history\"> \r\n          {messages}\r\n          </div>\r\n          <div ref={el=>{this.el = el;}} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChatHistory;","import ChatInput from \"./ChatInput\";\r\n\r\nexport default ChatInput;","import React, { Component } from \"react\";\r\nimport \"./ChatInput.scss\";\r\n\r\n\r\nclass ChatInput extends Component {\r\n  render() {\r\n    let chatInput;\r\n   if((this.props.roomName).length > 0){\r\n     // visible = true;\r\n     chatInput= <input onKeyDown={this.props.send} placeholder={\"Message \" +  this.props.roomName }/>\r\n   } else {\r\n    chatInput= <div/>\r\n \r\n   }\r\n    return (\r\n      <div className=\"ChatInput\" >\r\n            {chatInput}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChatInput;","import UserList from \"./UserList\";\r\n\r\n\r\nexport default UserList;","import React,{Component} from 'react'\r\nimport \"./UserList.scss\"\r\nclass  UserList extends Component {\r\n  \r\n render() { \r\n   let users;\r\n  if((this.props.userList).length > 0){\r\n    // visible = true;\r\n    users= <p className=\"usersLabel\" > {\"Users:\" }</p> \r\n  } else {\r\n    users= <p className=\"usersLabel\" > {\"\" }</p> \r\n\r\n  }\r\n  \r\n    return (\r\n      <div className=\"UserList\">\r\n        <div className=\"user-list\">\r\n          {users}\r\n          {/* <p className=\"usersLabel\" > {\"Users:\" && visible }</p> */}\r\n           {this.props.userList && this.props.userList.map((user, index) => \r\n          <p key={index} className=\"user\" style={{ color: \"#\"+user.color }} onClick={()=> this.props.privateMessage(user.id)}>\r\n            {user.name}\r\n            </p>\r\n        )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserList\r\n","class Auth {\r\n  constructor(){\r\n    this.sessionStorageUser = 'ChatUser';\r\n  }\r\n\r\n  login(name, colour, cb) {\r\n    if(colour.charAt(0) === '#'){\r\n      colour = colour.replace('#', '');\r\n    }\r\n    // var userId = this.createGuid()\r\n    sessionStorage.setItem(this.sessionStorageUser, JSON.stringify({\r\n      _name: name,\r\n      _colour: colour\r\n      // _userId: userId\r\n    }));\r\n    cb();\r\n  }\r\n\r\n  logout(cb) {\r\n    sessionStorage.removeItem(this.sessionStorageUser)\r\n    cb();\r\n  }\r\n\r\n  isAuthenticated() {\r\n    var test = sessionStorage.getItem(this.sessionStorageUser);\r\n    return test;\r\n  }\r\n\r\n  getUserName() {\r\n    return JSON.parse(sessionStorage.getItem(this.sessionStorageUser))._name;\r\n  }\r\n\r\n  getUserColour(){\r\n    return JSON.parse(sessionStorage.getItem(this.sessionStorageUser))._colour;\r\n  }\r\n\r\n  // getUserId() {\r\n  //   return JSON.parse(sessionStorage.getItem(this.sessionStorageUser))._userId;\r\n  // }\r\n\r\n  // createGuid() {  \r\n  //   function S4() {  \r\n  //      return (((1+Math.random())*0x10000)|0).toString(16).substring(1);  \r\n  //   }  \r\n  //   return (S4() + S4() + \"-\" + S4() + \"-4\" + S4().substr(0,3) + \"-\" + S4() + \"-\" + S4() + S4() + S4()).toLowerCase();  \r\n  // }  \r\n}\r\n\r\nexport default new Auth()","import React, { Component } from \"react\";\r\nimport auth from \"../../../authorization/auth\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport \"./Header.scss\";\r\n\r\nclass Header extends Component{\r\n\r\n  // handleChange = (e) => {\r\n  //   this.setState({\r\n  //     [e.target.name]: e.target.value\r\n  //   }\r\n  //   , () =>  console.log(this.state.roomName)\r\n  //   );\r\n  // }\r\n\r\n  handleLogout(){\r\n    auth.logout(() => {\r\n      return this.props.history.push('/');\r\n    })\r\n  }\r\n  render() {\r\n    return(\r\n    <div className=\"header\">\r\n      <input placeholder=\"Join room\" onKeyDown={this.props.roomName}/>\r\n      <h2>{ this.props.currentRoom  || \"Chat App\" }</h2>\r\n      <button className=\"logout-button\" onClick={() => { this.handleLogout()}}>\r\n        Logout\r\n      </button>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);","import Header from \"./Header.jsx\";\r\n\r\nexport default Header;","import ServerList from \"./ServerList.jsx\";\r\n\r\nexport default ServerList;\r\n","import React, { Component } from \"react\";\r\nimport \"./ServerList.scss\";\r\n\r\nclass ServerList extends Component {\r\n  render() {\r\n    // gets messages from app.js through props\r\n    // document.addEventListener(\"contextmenu\", (event) => {\r\n    //   event.preventDefault();\r\n    //   const xPos = event.pageX + \"px\";\r\n    //   const yPos = event.pageY + \"px\";\r\n    //   //\r\n    // });\r\n    return (\r\n      // <div className=\"ServerIcons\" onClick={}> A </div> \r\n      <div className=\"Servers\">\r\n        <div className=\"server-list\">\r\n          { this.props.rooms && this.props.rooms.map((room, index) =>\r\n          <button key={index} className=\"ServerIcons\" value = {room.ID} \r\n           onClick={()=> this.props.changeRoom(room.ID) } > \r\n            {room.name.split(' ').map(function(item){return item[0]}).join('').toUpperCase()}\r\n          </button>\r\n           )} \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ServerList;","import ChatPage from \"./ChatPage.jsx\";\r\n\r\nexport default ChatPage;","import React,{Component} from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport ChatSocket from '../../../api/ChatSocket';\r\nimport \"./ChatPage.scss\"\r\nimport ChatHistory from \"../ChatHistory\";\r\nimport ChatInput from \"../ChatInput\";\r\nimport UserList from \"../Users\";\r\nimport auth from '../../../authorization/auth';\r\nimport Header from '../../Head/Header'\r\nimport ServerList from '../ServerList'\r\n\r\n\r\nclass ChatPage extends Component {\r\n  _chatSocket;\r\n \r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      isActive:false,\r\n      chatHistory:[],\r\n      userList:[],\r\n      rooms:{},\r\n      room : {\r\n        name:'',\r\n        ID: '',\r\n        messages:[],\r\n        users:[]\r\n      }\r\n    }\r\n  }\r\n  \r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    }\r\n    );\r\n  }\r\n\r\n  handleShow = () => {\r\n    this.setState({\r\n      isActive:true\r\n    });\r\n  };\r\n\r\n  handleHide = () => {\r\n    this.setState({\r\n      isActive:false\r\n    });\r\n  };\r\n\r\n  componentDidMount(){\r\n    if ( auth.isAuthenticated()){\r\n      this._chatSocket = new ChatSocket(auth.getUserName(), auth.getUserColour())\r\n      this._chatSocket.connect((event) => {\r\n        this.handleSocketEvent(event)\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSocketEvent(event) {\r\n    switch (event.type) {\r\n      case \"close\":\r\n        this.handleLogout()\r\n        break;\r\n      case \"message\":\r\n        this.handleNewMessage(event)\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n  handleNewMessage(event){\r\n    let data = event.data;\r\n    data = data.split(/\\r?\\n/);\r\n\r\n    for (let i = 0; i < data.length; i++){\r\n      let msg = JSON.parse(data[i]);\r\n      console.log(\"handlenewmessage\");\r\n      console.log(msg);\r\n      switch (msg.action){\r\n        case \"send-message\":\r\n          this.handleChatMessage(msg);\r\n          break;\r\n        case \"user-join\":\r\n          this.handleUserJoined(msg);\r\n          break;\r\n        case \"user-left\":\r\n          this.handleUserLeft(msg);\r\n          break;\r\n        case \"room-joined\":\r\n          this.handleRoomJoined(msg)\r\n          break;\r\n        case \"user-join-room\":\r\n          this.handleUserJoinedRoom(msg)\r\n          break;\r\n        case \"list-clients\":\r\n          this.handleUserJoinedRoom(msg)\r\n          break;\r\n        default:\r\n          break;\r\n\r\n      }\r\n      this.updateState();\r\n    }\r\n  };\r\n  handleUserJoinedRoom(msg){\r\n    let user = {\r\n      name: msg.user,\r\n      id: msg.id,\r\n      color: msg.color\r\n    };\r\n    this.state.rooms[msg.roomid].users.push(user)\r\n\r\n    if( this.state.rooms[msg.roomid].users.length > 0){\r\n      this.state.rooms[msg.roomid].users.sort( (a,b) =>{\r\n        if(a.name < b.name){return -1;}\r\n        if(a.name > b.name){return 1;}\r\n        {return 0;}\r\n      } );\r\n    }\r\n  };\r\n  handleChatMessage(msg){\r\n   if (typeof this.state.rooms[msg.roomid] !== \"undefined\"){\r\n    let message = {\r\n      msg:msg.message,\r\n      user:msg.user,\r\n      color:msg.color,\r\n      timeStamp: msg.timestamp\r\n    }\r\n    this.state.rooms[msg.roomid].messages.push(message);\r\n   } \r\n  };\r\n  handleUserJoined(msg){\r\n    let user = {\r\n      name: msg.user,\r\n      id: msg.id,\r\n      color: msg.color\r\n    };\r\n    this.state.userList.push(user);\r\n    \r\n  };\r\n  handleRoomJoined(msg){\r\n    let user = {\r\n      name: msg.user,\r\n      id: msg.id,\r\n      color: msg.color\r\n    };\r\n    if (typeof this.state.rooms[msg.roomid] === \"undefined\"){\r\n      let room = {\r\n        name:msg.room,\r\n        ID: msg.roomid,\r\n        messages:[],\r\n        users:[user]\r\n      };\r\n      this.setState({\r\n        ...this.state,\r\n        rooms: {\r\n            ...this.state.rooms,\r\n            [msg.roomid]: room\r\n        }\r\n     });    \r\n    } else {\r\n      this.state.rooms[msg.roomid].users.push(user);\r\n\r\n    }\r\n    console.log(this.state.rooms[msg.roomid]);\r\n \r\n    if( this.state.rooms[msg.roomid].users.length > 0){\r\n      this.state.rooms[msg.roomid].users.sort( (a,b) =>{\r\n        if(a.name < b.name){return -1;}\r\n        if(a.name > b.name){return 1;}\r\n        {return 0;}\r\n      } );\r\n    }\r\n    console.log(this.state.rooms[msg.roomid]);\r\n  };\r\n\r\n  handleUserLeft(msg){\r\n    for (let i =0; i< this.state.rooms[msg.roomid].users.length;i++){\r\n      if (this.state.rooms[msg.roomid].users[i].id === msg.id){\r\n        this.state.rooms[msg.roomid].users.splice(i,1);\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  componentWillUnmount(){\r\n    this._chatSocket.closeSocket();\r\n  };\r\n\r\n  \r\n  handleLogout(){\r\n    auth.logout(()=> {\r\n      this.props.history.push(\"/\")\r\n    })\r\n  };\r\n\r\n  send(event, room){\r\n    if(event.keyCode === 13 && event.target.value !== \"\") {\r\n      this._chatSocket.sendMessage(room, event.target.value);\r\n      console.log(event.target.value, room);\r\n      event.target.value = \"\";\r\n    }\r\n  };\r\n  findRoom(event){\r\n    if(event.keyCode === 13 && event.target.value !== \"\"){\r\n      this._chatSocket.joinRoom(event.target.value);\r\n      this._chatSocket.roomInput = event.target.value;\r\n      event.target.value = \"\";\r\n    }\r\n  };\r\n  updateState (){\r\n    this.setState({\r\n      rooms: this.state.rooms\r\n    });\r\n  };\r\n  changeRoom= (roomID)=>{\r\n    this.setState({\r\n      room: this.state.rooms[roomID]\r\n    });\r\n  };\r\n  privateMessage=(room)=>{\r\n    this._chatSocket.joinPrivateRoom(room);\r\n    console.log(room);\r\n  };\r\n    \r\n  render() {\r\n    if(!auth.isAuthenticated){\r\n      return <Redirect to='/' />\r\n    }\r\n    \r\n    return (\r\n        <div className=\"ChatPage\" >\r\n          <Header roomName = {e=> this.findRoom(e)} currentRoom={this.state.room.name}/>\r\n            {/* add leave room button in Serverlist? \r\n  // background-color: #2c2e33;*/}\r\n            <div className=\"chatBody\"> \r\n              <div className = \"serverList\"> \r\n                <ServerList rooms = {Object.values(this.state.rooms)} changeRoom={ this.changeRoom}/>\r\n              </div>\r\n              <div className = \"roomPage\"> \r\n                <ChatHistory chatHistory={this.state.room.messages}></ChatHistory>\r\n                <ChatInput send={e=> this.send(e, this.state.room) } roomName={this.state.room.name}/>\r\n              </div>\r\n              <div className = \"usersList\"> \r\n                <UserList userList={this.state.room.users} privateMessage={this.privateMessage}/>\r\n              </div>\r\n            </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ChatPage\r\n","import LoginPage from \"./LoginPage\";\r\n\r\n\r\nexport default LoginPage;","import React, {Component} from 'react'\r\nimport auth from '../../../authorization/auth';\r\nimport \"./LoginPage.scss\"\r\n\r\nclass LoginPage extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      name:\"\",\r\n      colour:\"\", \r\n      continue: true\r\n    };\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n    // console.log(/^#?(([0-9a-fA-F]{2}){3}|([0-9a-fA-F]){3})$/i.test(this.state.color));\r\n    // console.log(this.state.colour);\r\n  }\r\n\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"LoginPage\">\r\n        <div className=\"loginContainer\" onKeyPress={this.keyPressed}>\r\n          <div className=\"form__group field\">\r\n            <input type=\"input\" className=\"form__field\" name='name' id=\"name\" value={this.state.name} onChange={e=> this.handleChange(e)}/>\r\n            <label htmlFor=\"name\" className=\"form__label\">Username</label>\r\n          </div>\r\n          <div className=\"form__group field\">\r\n            <input type=\"input\" className=\"form__field\" name='colour' id=\"colour\" value={this.state.color} onChange={e=> this.handleChange(e)}/>\r\n            <label htmlFor=\"colour\" className=\"form__label\"> Name Colour  <span style={{color:'#E92750'}}>default: Red(E92750) </span>  </label>\r\n          </div>\r\n          <button className=\"login-button\"  onKeyPress={this.onKeyPress} onClick={this.verifyInput}>Login</button>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n    )\r\n    }\r\n\r\n    submitLogin =()=>{\r\n      auth.login(this.state.name, this.state.colour,()=>{\r\n        this.props.history.push(\"/chat\")\r\n      })\r\n    }\r\n    \r\n    verifyInput=()=>{\r\n      if (this.state.name !== ''  ){\r\n        this.submitLogin();\r\n      }\r\n    }\r\n\r\n    // checkColor=()=>{\r\n    //   if(/^#?([0-9A-F]{6})$/i.test(this.state.colour)){\r\n    //     return true;\r\n    //   }\r\n    //   this.setState({\r\n    //     colour:\"E92750\"\r\n    //   }, () => console.log(this.state.colour) );\r\n    //   return true;\r\n      \r\n    // }\r\n\r\n    keyPressed =(event)=>{\r\n      if (event.key === \"Enter\"){\r\n        this.verifyInput();\r\n      }\r\n    }\r\n}\r\n\r\nexport default LoginPage\r\n","import React from 'react'\r\nimport {Route, Redirect} from 'react-router-dom'\r\nimport auth from './auth'\r\n\r\nexport const ProtectedRoute = ({component: Component, ...rest}) => {\r\n\r\n\r\n  return(\r\n    <Route \r\n    {...rest}\r\n    render = {(props) => auth.isAuthenticated()\r\n    ? <Component {...props}/>\r\n    : <Redirect to={{pathname:'/', state:{from:props.location}}} />}\r\n    />\r\n  )\r\n}","// App.js\nimport React, { Component } from \"react\";\nimport {Route, Switch} from 'react-router-dom';\n// import Header from \"./Components/Head/Header\";\n// import ServerList from \"./Components/ServerList\";\nimport ChatPage from './Components/Chat/ChatPage';\nimport LoginPage from './Components/Log/Login';\nimport {ProtectedRoute} from './authorization/protected.route'\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        {/* <Header/> */}\n        {/* <ServerList/> */}\n        <Route> \n          <Switch>\n            <Route exact path=\"/\" component={LoginPage}/>\n            <ProtectedRoute exact path=\"/chat\" component={ChatPage} />\n            <Route path=\"*\" component={() => \"404 NOT FOUND\"}/>\n          </Switch>\n         </Route>\n      </div>\n    );\n  }\n}\n\nexport default App;","const isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n\n// reportWebVitals();"],"sourceRoot":""}