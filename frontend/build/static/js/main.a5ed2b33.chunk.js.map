{"version":3,"sources":["api/ChatSocket.js","Components/Chat/Message/index.js","Components/Chat/Message/Message.jsx","Components/Chat/ChatHistory/index.js","Components/Chat/ChatHistory/ChatHistory.jsx","Components/Chat/ChatInput/index.js","Components/Chat/ChatInput/ChatInput.jsx","Components/Chat/Users/index.js","Components/Chat/Users/UserList.jsx","authorization/auth.js","Components/Head/Header/Header.jsx","Components/Head/Header/index.js","Components/Chat/ServerList/index.js","Components/Chat/ServerList/ServerList.jsx","Components/Chat/ChatPage/index.js","Components/Chat/ChatPage/ChatPage.jsx","Components/Log/Login/index.js","Components/Log/Login/LoginPage.jsx","authorization/protected.route.js","App.js","serviceWorker.js","index.js"],"names":["ChatSocket","userName","userColour","host","window","location","origin","replace","this","cs","WebSocket","cb","console","log","onopen","onmessage","msg","onclose","event","onerror","error","room","send","JSON","stringify","action","message","roomid","ID","name","close","roomName","i","rooms","length","splice","Message","props","temp","state","timeStamp","displayTime","className","style","color","user","localeTime","Date","toLocaleString","forceUpdate","substr","Component","ChatHistory","scrollToBottom","el","scrollIntoView","behvaior","messages","chatHistory","map","index","id","ref","ChatInput","chatInput","onKeyDown","placeholder","UserList","users","userList","onClick","privateMessage","sessionStorageUser","colour","charAt","sessionStorage","setItem","_name","_colour","removeItem","getItem","parse","Header","auth","logout","history","push","currentRoom","handleLogout","withRouter","ServerList","value","changeRoom","split","item","join","toUpperCase","ChatPage","handleChange","e","setState","target","handleShow","isActive","handleHide","roomID","_chatSocket","joinPrivateRoom","isAuthenticated","getUserName","getUserColour","connect","handleSocketEvent","type","handleNewMessage","data","handleChatMessage","handleUserJoined","handleUserLeft","handleRoomJoined","handleUserJoinedRoom","updateState","sortUsersinRoom","timestamp","sort","a","b","closeSocket","keyCode","sendMessage","joinRoom","roomInput","findRoom","Object","values","to","LoginPage","submitLogin","login","verifyInput","keyPressed","key","continue","onKeyPress","onChange","htmlFor","ProtectedRoute","component","rest","render","pathname","from","App","exact","path","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.a5ed2b33.chunk.js","sourcesContent":["class ChatSocket{\r\n  cs;\r\n\r\n  constructor( userName, userColour){\r\n    var host = window.location.origin.replace(/^http/, 'wss');\r\n    this.cs = new WebSocket(`${host}?user=${userName}&userColour=${userColour}`)\r\n\r\n  }\r\n  connect(cb) {\r\n    console.log(\"Attempting Connection...\");\r\n  \r\n    this.cs.onopen = () => {\r\n      console.log(\"Successfully Connected\");\r\n    };\r\n  \r\n    this.cs.onmessage = (msg) => {\r\n      cb(msg)\r\n    };\r\n  \r\n    this.cs.onclose = (event) => {\r\n      console.log(\"Socket Closed Connection: \", event);\r\n      cb(event)\r\n    };\r\n  \r\n    this.cs.onerror = (error) => {\r\n      console.log(\"Socket Error: \", error);\r\n    };\r\n  };\r\n\r\n\r\n  sendMessage(room, msg){\r\n    if (msg !== \"\"){\r\n      this.cs.send(JSON.stringify({\r\n        action:\"send-message\",\r\n        message:msg,\r\n        roomid:room.ID,\r\n        room:room.name\r\n      }));      \r\n    }\r\n  }\r\n\r\n  createSocket(){\r\n    console.log(\"WS open!\");\r\n  }\r\n\r\n  closeSocket(){\r\n    if (this.cs != null){\r\n      this.cs.close();\r\n      this.cs=null;\r\n    }\r\n  }\r\n\r\n  joinRoom(roomName){\r\n    this.cs.send(JSON.stringify({action:'join-room', message:roomName}))\r\n  };\r\n  leaveRoom(room){\r\n    this.cs.send(JSON.stringify({action:'leave-room', message:room}))\r\n    for (let i=0;i<this.rooms.length;i++){\r\n      if(this.rooms[i].ID === room){\r\n        this.rooms.splice(i,1);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n  joinPrivateRoom(room){\r\n    this.cs.send(JSON.stringify({action:'join-room-private', message:room}))\r\n  };\r\n}\r\nexport default ChatSocket;","import Message from \"./Message.jsx\";\r\n\r\nexport default Message;","import React, { Component } from \"react\";\r\nimport \"./Message.scss\";\r\n\r\nclass Message extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let temp = this.props.message;\r\n    this.state = {\r\n      message: temp,\r\n      timeStamp: this.displayTime(temp.timeStamp)\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"Message\">\r\n      <span className =\"timeStamp\" >\r\n            {this.state.timeStamp}</span>\r\n      <span className=\"userName\" style={{color:\"#\"+this.state.message.color}}>\r\n            {this.state.message.user}&nbsp;\r\n            </span>\r\n      <span className=\"messageBody\" >{\r\n            this.state.message.msg}\r\n            </span>\r\n      </div>;\r\n  }\r\n\r\n\r\n  displayTime(timeStamp) {\r\n    var localeTime = new Date(timeStamp).toLocaleString();\r\n    this.forceUpdate();\r\n    return `${localeTime.substr(11, 5)}\\u00A0${localeTime.substr(localeTime.length - 2, localeTime.length)}`;\r\n  }\r\n}\r\n\r\nexport default Message;","import ChatHistory from \"./ChatHistory.jsx\";\r\n\r\nexport default ChatHistory;","import React, { Component } from \"react\";\r\nimport Message from \"../Message\";\r\nimport \"./ChatHistory.scss\";\r\n\r\nclass ChatHistory extends Component {\r\n\r\n  componentDidMount(){\r\n    this.scrollToBottom();\r\n    this.forceUpdate();\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    this.scrollToBottom();\r\n  }\r\n  scrollToBottom(){\r\n    this.el.scrollIntoView({behvaior:'smooth'});\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.props.chatHistory);\r\n    const messages = this.props.chatHistory && this.props.chatHistory.map( (msg,index) => <Message key={index} message={msg} />);\r\n\r\n    // console.log(\"chat history\");\r\n    // console.log(messages);\r\n    return (\r\n      <div className=\"ChatHistory\">\r\n        <div id=\"chatHistory\" className=\"disable-scrollbars\">\r\n          <div id=\"history\"> \r\n          {messages}\r\n          </div>\r\n          <div ref={el=>{this.el = el;}} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChatHistory;","import ChatInput from \"./ChatInput\";\r\n\r\nexport default ChatInput;","import React, { Component } from \"react\";\r\nimport \"./ChatInput.scss\";\r\n\r\n\r\nclass ChatInput extends Component {\r\n  render() {\r\n    let chatInput;\r\n   if((this.props.roomName).length > 0){\r\n     // visible = true;\r\n     chatInput= <input onKeyDown={this.props.send} placeholder={\"Message \" +  this.props.roomName }/>\r\n   } else {\r\n    chatInput= <div/>\r\n \r\n   }\r\n    return (\r\n      <div className=\"ChatInput\" >\r\n            {chatInput}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChatInput;","import UserList from \"./UserList\";\r\n\r\n\r\nexport default UserList;","import React,{Component} from 'react'\r\nimport \"./UserList.scss\"\r\nclass  UserList extends Component {\r\n  \r\n render() { \r\n   let users;\r\n  if((this.props.userList).length > 0){\r\n    // visible = true;\r\n    users= <p className=\"usersLabel\" > {\"Users:\" }</p> \r\n  } else {\r\n    users= <p className=\"usersLabel\" > {\"\" }</p> \r\n\r\n  }\r\n  \r\n    return (\r\n      <div className=\"UserList\">\r\n        <div className=\"user-list\">\r\n          {users}\r\n          {/* <p className=\"usersLabel\" > {\"Users:\" && visible }</p> */}\r\n           {this.props.userList && this.props.userList.map((user, index) => \r\n          <p key={index} className=\"user\" style={{ color: \"#\"+user.color }} onClick={()=> this.props.privateMessage(user.id)}>\r\n            {user.name}\r\n            </p>\r\n        )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserList\r\n","class Auth {\r\n  constructor(){\r\n    this.sessionStorageUser = 'ChatUser';\r\n  }\r\n\r\n  login(name, colour, cb) {\r\n    if(colour.charAt(0) === '#'){\r\n      colour = colour.replace('#', '');\r\n    }\r\n    sessionStorage.setItem(this.sessionStorageUser, JSON.stringify({\r\n      _name: name,\r\n      _colour: colour\r\n    }));\r\n    cb();\r\n  }\r\n\r\n  logout(cb) {\r\n    sessionStorage.removeItem(this.sessionStorageUser)\r\n    cb();\r\n  }\r\n\r\n  isAuthenticated() {\r\n    var test = sessionStorage.getItem(this.sessionStorageUser);\r\n    return test;\r\n  }\r\n\r\n  getUserName() {\r\n    return JSON.parse(sessionStorage.getItem(this.sessionStorageUser))._name;\r\n  }\r\n\r\n  getUserColour(){\r\n    return JSON.parse(sessionStorage.getItem(this.sessionStorageUser))._colour;\r\n  }  \r\n}\r\n\r\nexport default new Auth()","import React, { Component } from \"react\";\r\nimport auth from \"../../../authorization/auth\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport \"./Header.scss\";\r\n\r\nclass Header extends Component{\r\n\r\n  // handleChange = (e) => {\r\n  //   this.setState({\r\n  //     [e.target.name]: e.target.value\r\n  //   }\r\n  //   , () =>  console.log(this.state.roomName)\r\n  //   );\r\n  // }\r\n\r\n  handleLogout(){\r\n    auth.logout(() => {\r\n      return this.props.history.push('/');\r\n    })\r\n  }\r\n  render() {\r\n    return(\r\n    <div className=\"header\">\r\n      <input placeholder=\"Join room\" onKeyDown={this.props.roomName}/>\r\n      <h2>{ this.props.currentRoom  || \"Chat App\" }</h2>\r\n      <button className=\"logout-button\" onClick={() => { this.handleLogout()}}>\r\n        Logout\r\n      </button>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);","import Header from \"./Header.jsx\";\r\n\r\nexport default Header;","import ServerList from \"./ServerList.jsx\";\r\n\r\nexport default ServerList;\r\n","import React, { Component } from \"react\";\r\nimport \"./ServerList.scss\";\r\n\r\nclass ServerList extends Component {\r\n  render() {\r\n    // gets messages from app.js through props\r\n    // document.addEventListener(\"contextmenu\", (event) => {\r\n    //   event.preventDefault();\r\n    //   const xPos = event.pageX + \"px\";\r\n    //   const yPos = event.pageY + \"px\";\r\n    //   //\r\n    // });\r\n    return (\r\n      // <div className=\"ServerIcons\" onClick={}> A </div> \r\n      <div className=\"Servers\">\r\n        <div className=\"server-list\">\r\n          { this.props.rooms && this.props.rooms.map((room, index) =>\r\n          <button key={index} className=\"ServerIcons\" value = {room.ID} \r\n           onClick={()=> this.props.changeRoom(room.ID) } > \r\n            {room.name.split(' ').map(function(item){return item[0]}).join('').toUpperCase()}\r\n          </button>\r\n           )} \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ServerList;","import ChatPage from \"./ChatPage.jsx\";\r\n\r\nexport default ChatPage;","import React,{Component} from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport ChatSocket from '../../../api/ChatSocket';\r\nimport \"./ChatPage.scss\"\r\nimport ChatHistory from \"../ChatHistory\";\r\nimport ChatInput from \"../ChatInput\";\r\nimport UserList from \"../Users\";\r\nimport auth from '../../../authorization/auth';\r\nimport Header from '../../Head/Header'\r\nimport ServerList from '../ServerList'\r\n\r\nclass ChatPage extends Component {\r\n  _chatSocket;\r\n \r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      isActive:false,\r\n      chatHistory:[],\r\n      userList:[],\r\n      rooms:{},\r\n      room : {\r\n        name:'',\r\n        ID: '',\r\n        messages:[],\r\n        users:[]\r\n      }\r\n    }\r\n  }\r\n  \r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    }\r\n    );\r\n  }\r\n\r\n  handleShow = () => {\r\n    this.setState({\r\n      isActive:true\r\n    });\r\n  };\r\n\r\n  handleHide = () => {\r\n    this.setState({\r\n      isActive:false\r\n    });\r\n  };\r\n\r\n  componentDidMount(){\r\n    if ( auth.isAuthenticated()){\r\n      this._chatSocket = new ChatSocket(auth.getUserName(), auth.getUserColour())\r\n      this._chatSocket.connect((event) => {\r\n        this.handleSocketEvent(event)\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSocketEvent(event) {\r\n    switch (event.type) {\r\n      case \"close\":\r\n        this.handleLogout()\r\n        break;\r\n      case \"message\":\r\n        this.handleNewMessage(event)\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n  handleNewMessage(event){\r\n    let data = event.data;\r\n    data = data.split(/\\r?\\n/);\r\n\r\n    for (let i = 0; i < data.length; i++){\r\n      let msg = JSON.parse(data[i]);\r\n      console.log(\"handlenewmessage\");\r\n      console.log(msg);\r\n      switch (msg.action){\r\n        case \"send-message\":\r\n          this.handleChatMessage(msg);\r\n          break;\r\n        case \"user-join\":\r\n          this.handleUserJoined(msg);\r\n          break;\r\n        case \"user-left\":\r\n          this.handleUserLeft(msg);\r\n          break;\r\n        case \"room-joined\":\r\n          this.handleRoomJoined(msg)\r\n          break;\r\n        case \"user-join-room\":\r\n          this.handleUserJoinedRoom(msg)\r\n          break;\r\n        case \"list-clients\":\r\n          this.handleUserJoinedRoom(msg)\r\n          break;\r\n        default:\r\n          break;\r\n\r\n      }\r\n      this.updateState();\r\n    }\r\n  };\r\n  handleUserJoinedRoom(msg){\r\n    let user = {\r\n      name: msg.user,\r\n      id: msg.id,\r\n      color: msg.color\r\n    };\r\n    this.state.rooms[msg.roomid].users.push(user)\r\n\r\n    this.sortUsersinRoom(msg.roomid);\r\n    // if( this.state.rooms[msg.roomid].users.length > 0){\r\n    //   this.state.rooms[msg.roomid].users.sort( (a,b) =>{\r\n    //     if(a.name < b.name){return -1;}\r\n    //     if(a.name > b.name){return 1;}\r\n    //     {return 0;}\r\n    //   } );\r\n    // }\r\n  };\r\n  handleChatMessage(msg){\r\n   if (typeof this.state.rooms[msg.roomid] !== \"undefined\"){\r\n    let message = {\r\n      msg:msg.message,\r\n      user:msg.user,\r\n      color:msg.color,\r\n      timeStamp: msg.timestamp\r\n    }\r\n    this.state.rooms[msg.roomid].messages.push(message);\r\n   } \r\n  };\r\n  handleUserJoined(msg){\r\n    let user = {\r\n      name: msg.user,\r\n      id: msg.id,\r\n      color: msg.color\r\n    };\r\n    this.state.userList.push(user);\r\n    \r\n  };\r\n  handleRoomJoined(msg){\r\n    let user = {\r\n      name: msg.user,\r\n      id: msg.id,\r\n      color: msg.color\r\n    };\r\n    if (typeof this.state.rooms[msg.roomid] === \"undefined\"){\r\n      let room = {\r\n        name:msg.room,\r\n        ID: msg.roomid,\r\n        messages:[],\r\n        users:[user]\r\n      };\r\n      this.setState({\r\n        ...this.state,\r\n        rooms: {\r\n            ...this.state.rooms,\r\n            [msg.roomid]: room\r\n        }\r\n     });    \r\n    } else {\r\n      this.state.rooms[msg.roomid].users.push(user);\r\n\r\n    }\r\n    this.sortUsersinRoom(msg.roomid);\r\n  };\r\n  sortUsersinRoom(roomid){\r\n\r\n    if( this.state.rooms[roomid].users.length > 0){\r\n      this.state.rooms[roomid].users.sort( (a,b) =>{\r\n        if(a.name < b.name){return -1;}\r\n        if(a.name > b.name){return 1;}\r\n        {return 0;}\r\n      } );\r\n    }\r\n  }\r\n\r\n  handleUserLeft(msg){\r\n    for (let i =0; i< this.state.rooms[msg.roomid].users.length;i++){\r\n      if (this.state.rooms[msg.roomid].users[i].id === msg.id){\r\n        this.state.rooms[msg.roomid].users.splice(i,1);\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  componentWillUnmount(){\r\n    this._chatSocket.closeSocket();\r\n  };\r\n\r\n  \r\n  handleLogout(){\r\n    auth.logout(()=> {\r\n      this.props.history.push(\"/\")\r\n    })\r\n  };\r\n\r\n  send(event, room){\r\n    if(event.keyCode === 13 && event.target.value !== \"\") {\r\n      this._chatSocket.sendMessage(room, event.target.value);\r\n      console.log(event.target.value, room);\r\n      event.target.value = \"\";\r\n    }\r\n  };\r\n  findRoom(event){\r\n    if(event.keyCode === 13 && event.target.value !== \"\"){\r\n      this._chatSocket.joinRoom(event.target.value);\r\n      this._chatSocket.roomInput = event.target.value;\r\n      event.target.value = \"\";\r\n    }\r\n  };\r\n  updateState (){\r\n    this.setState({\r\n      rooms: this.state.rooms\r\n    });\r\n  };\r\n  changeRoom= (roomID)=>{\r\n    this.setState({\r\n      room: this.state.rooms[roomID]\r\n    });\r\n  };\r\n  privateMessage=(room)=>{\r\n    this._chatSocket.joinPrivateRoom(room);\r\n    console.log(room);\r\n  };\r\n    \r\n  render() {\r\n    if(!auth.isAuthenticated){\r\n      return <Redirect to='/' />\r\n    }\r\n    \r\n    return (\r\n        <div className=\"ChatPage\" >\r\n          <Header roomName = {e=> this.findRoom(e)} currentRoom={this.state.room.name}/>\r\n            {/* add leave room button in Serverlist? */}\r\n            <div className=\"chatBody\"> \r\n              <div className = \"serverList\"> \r\n                <ServerList rooms = {Object.values(this.state.rooms)} changeRoom={ this.changeRoom}/>\r\n              </div>\r\n              <div className = \"roomPage\"> \r\n                <ChatHistory chatHistory={this.state.room.messages}></ChatHistory>\r\n                <ChatInput send={e=> this.send(e, this.state.room) } roomName={this.state.room.name}/>\r\n              </div>\r\n              <div className = \"usersList\"> \r\n                <UserList userList={this.state.room.users} privateMessage={this.privateMessage}/>\r\n              </div>\r\n            </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ChatPage\r\n","import LoginPage from \"./LoginPage\";\r\n\r\n\r\nexport default LoginPage;","import React, {Component} from 'react'\r\nimport auth from '../../../authorization/auth';\r\nimport \"./LoginPage.scss\"\r\n\r\nclass LoginPage extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      name:\"\",\r\n      colour:\"\", \r\n      continue: true\r\n    };\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"LoginPage\">\r\n        <div className=\"loginContainer\" onKeyPress={this.keyPressed}>\r\n          <div className=\"form__group field\">\r\n            <input type=\"input\" className=\"form__field\" name='name' id=\"name\" value={this.state.name} onChange={e=> this.handleChange(e)}/>\r\n            <label htmlFor=\"name\" className=\"form__label\">Username</label>\r\n          </div>\r\n          <div className=\"form__group field\">\r\n            <input type=\"input\" className=\"form__field\" name='colour' id=\"colour\" value={this.state.color} onChange={e=> this.handleChange(e)}/>\r\n            <label htmlFor=\"colour\" className=\"form__label\"> Name Colour  <span style={{color:'#E92750'}}>default: Red(E92750) </span>  </label>\r\n          </div>\r\n          <button className=\"login-button\"  onKeyPress={this.onKeyPress} onClick={this.verifyInput}>Login</button>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n    )\r\n    }\r\n\r\n    submitLogin =()=>{\r\n      auth.login(this.state.name, this.state.colour,()=>{\r\n        this.props.history.push(\"/chat\")\r\n      })\r\n    }\r\n    \r\n    verifyInput=()=>{\r\n      if (this.state.name !== ''  ){\r\n        this.submitLogin();\r\n      }\r\n    }\r\n\r\n    keyPressed =(event)=>{\r\n      if (event.key === \"Enter\"){\r\n        this.verifyInput();\r\n      }\r\n    }\r\n}\r\n\r\nexport default LoginPage\r\n","import React from 'react'\r\nimport {Route, Redirect} from 'react-router-dom'\r\nimport auth from './auth'\r\n\r\nexport const ProtectedRoute = ({component: Component, ...rest}) => {\r\n\r\n\r\n  return(\r\n    <Route \r\n    {...rest}\r\n    render = {(props) => auth.isAuthenticated()\r\n    ? <Component {...props}/>\r\n    : <Redirect to={{pathname:'/', state:{from:props.location}}} />}\r\n    />\r\n  )\r\n}","import React, { Component } from \"react\";\nimport {Route, Switch} from 'react-router-dom';\nimport ChatPage from './Components/Chat/ChatPage';\nimport LoginPage from './Components/Log/Login';\nimport {ProtectedRoute} from './authorization/protected.route'\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Route> \n          <Switch>\n            <Route exact path=\"/\" component={LoginPage}/>\n            <ProtectedRoute exact path=\"/chat\" component={ChatPage} />\n            <Route path=\"*\" component={() => \"404 NOT FOUND\"}/>\n          </Switch>\n         </Route>\n      </div>\n    );\n  }\n}\n\nexport default App;","const isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n\n// reportWebVitals();"],"sourceRoot":""}